{"version":3,"sources":["res/FlatCharacterAvatarWeb.svg","res/sw-image.jpg","res/rspeer-img.png","components/Main.js","components/SiteHeader.js","components/TitleCard.js","components/BodyItem.js","components/Introduction.js","components/Lists.js","components/Card.js","components/Skills.js","components/TimelineEntry.js","components/Work.js","components/Projects.js","components/Contact.js","functions/ElementHover.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","Box","animation","type","duration","background","overflow","Anchor","href","name","this","props","children","React","Component","StyledAnchor","styled","SiteHeader","direction","align","justify","flex","pad","top","bottom","horizontal","border","color","size","side","delay","label","gap","className","StyledText","Text","HeaderText","margin","TitleCard","width","height","Image","fit","src","AvatarImg","BodyItem","anchorHref","anchorName","vertical","weight","titleTextColor","title","Introduction","ListItem","right","Next","imageColor","ListContainer","SplitBackgroundCard","fill","bottomColor","SplitBackgroundCardComponent","topPad","header","topColor","cardTopColor","bottomPad","cardBottomColor","elevation","round","corner","JavaTitle","Code","ReactTitle","Reactjs","ProjectsTitle","Deploy","Skills","textColor","TitleText","PositionText","TimelineEntry","dateTextColor","date","CaretNext","left","positionTextColor","position","TechnologyEntry","technologies","stackColor","techStack","stack","map","i","TechnologyCard","Card","Work","About","Avatar","RSPeer","SW","ContactTitle","Icon","useState","isHovering","setHovering","Element","element","hoverColor","elementColor","onMouseEnter","onMouseLeave","useElementHover","Contact","Linkedin","Mail","Github","Footer","Date","getFullYear","target","theme","global","colors","titleText","accentText","hover","font","family","anchor","textDecoration","extend","transition","padding","box","text","xlarge","xxlarge","App","Grommet","full","Projects","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,oD,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,yLCmB5BC,E,uKAdX,OACE,kBAACC,EAAA,EAAD,CACEC,UAAW,CAAEC,KAAM,SAAUC,SAAU,QACvCC,WAAW,UACXC,SAAS,QAET,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,KAAK,SACzBC,KAAKC,MAAMC,c,GATDC,IAAMC,W,uHCCzB,IAAMC,EAAeC,kBAAOT,IAAPS,CAAH,KA8BHC,E,uKAxBX,OACE,kBAAChB,EAAA,EAAD,CACEiB,UAAU,MACVC,MAAM,SACNC,QAAQ,UACRC,KAAK,QACLC,IAAK,CAAEC,IAAK,QAASC,OAAQ,SAAUC,WAAY,UACnDC,OAAQ,CAAEC,MAAO,UAAWC,KAAM,SAAUC,KAAM,WAElD,kBAAC5B,EAAA,EAAD,CAAKC,UAAW,CAAEC,KAAM,SAAU2B,MAAO,MAAO1B,SAAU,SACxD,kBAACW,EAAD,CAAcP,KAAK,IAAIoB,KAAK,SAASG,MAAM,QAE7C,kBAAC9B,EAAA,EAAD,CAAKiB,UAAU,iBAAiBc,IAAI,UAClC,kBAACzB,EAAA,EAAD,CAAQ0B,UAAU,mBAAmBzB,KAAK,QAAQuB,MAAM,SACxD,kBAACxB,EAAA,EAAD,CAAQ0B,UAAU,mBAAmBzB,KAAK,UAAUuB,MAAM,WAC1D,kBAACxB,EAAA,EAAD,CAAQ0B,UAAU,mBAAmBzB,KAAK,QAAQuB,MAAM,SACxD,kBAACxB,EAAA,EAAD,CAAQ0B,UAAU,mBAAmBzB,KAAK,YAAYuB,MAAM,aAC5D,kBAACxB,EAAA,EAAD,CAAQ0B,UAAU,mBAAmBzB,KAAK,WAAWuB,MAAM,kB,GAnB5ClB,IAAMC,W,4ICF/B,IAAMoB,EAAalB,kBAAOmB,IAAPnB,CAAH,KAyChB,SAASoB,EAAWzB,GAClB,OACE,kBAACuB,EAAD,CACED,UAAWtB,EAAMsB,UACjBX,IAAI,QACJM,KAAK,UACLS,OAAO,QACPV,MAAM,aAELhB,EAAMC,UAKE0B,M,uKAjDX,OACE,kBAACrC,EAAA,EAAD,CACEiB,UAAU,MACVE,QAAQ,SACRD,MAAM,SACNE,KAAK,QACLhB,WAAW,WAEX,kBAACJ,EAAA,EAAD,CAAKqB,IAAI,QAAQH,MAAM,SAASoB,MAAM,QACpC,kBAACtC,EAAA,EAAD,CAAKuC,OAAO,QAAQD,MAAM,SACxB,kBAACE,EAAA,EAAD,CACER,UAAU,uBACVS,IAAI,QACJC,IAAKC,OAGT,kBAAC3C,EAAA,EAAD,CAAKiB,UAAU,iBAAiBC,MAAM,SAASC,QAAQ,UACrD,kBAACgB,EAAD,CAAYH,UAAU,yBAAtB,yBAGA,kBAACG,EAAD,CAAYH,UAAU,kBAAtB,YACA,kBAACG,EAAD,CAAYH,UAAU,0BAAtB,gBAIF,kBAACE,EAAA,EAAD,CAAME,OAAO,QAAQV,MAAM,cAA3B,gG,GA3Bcd,IAAMC,WCPvB,SAAS+B,EAASlC,GACvB,OACE,kBAACV,EAAA,EAAD,CAAKoB,KAAK,QAAQhB,WAAYM,EAAMN,WAAYa,UAAWP,EAAMO,WAC/D,kBAACX,EAAA,EAAD,CAAQC,KAAMG,EAAMmC,WAAYrC,KAAME,EAAMoC,aAC5C,kBAAC9C,EAAA,EAAD,CACEkB,MAAM,SACNC,QAAQ,SACRiB,OAAQ,CAAEZ,WAAY,SAAUuB,SAAU,UAC1C1B,IAAK,CAAEG,WAAY,SAAUuB,SAAU,UAGvC,kBAAC/C,EAAA,EAAD,CACEkB,MAAM,SACNC,QAAQ,SACRE,IAAK,CAAEC,IAAK,QAASE,WAAY,SAAUD,OAAQ,WAEnD,kBAACW,EAAA,EAAD,CAAMc,OAAO,OAAOtB,MAAOhB,EAAMuC,eAAgBtB,KAAK,UACnDjB,EAAMwC,SAIb,kBAAClD,EAAA,EAAD,CACEoC,OAAQ,CAAEZ,WAAY,QAASuB,SAAU,UACzC1B,IAAK,CAAEG,WAAY,QAASuB,SAAU,UAErCrC,EAAMC,W,ICDAwC,E,uKArBX,OACE,kBAACP,EAAD,CACExC,WAAW,QACX8C,MAAM,mBACNL,WAAW,UACXC,WAAW,UAEX,kBAACZ,EAAA,EAAD,CAAMR,MAAM,QAAQC,KAAK,UAAzB,ye,GATmBf,IAAMC,W,gCCA1B,SAASuC,EAAS1C,GACvB,OACE,kBAACV,EAAA,EAAD,CAAKoB,KAAK,QAAQH,UAAU,iBAAiBC,MAAM,SAASb,SAAS,QACnE,kBAAC6B,EAAA,EAAD,CAAMP,KAAK,SAASN,IAAI,SACtB,kBAACrB,EAAA,EAAD,CAAKiB,UAAU,OACb,kBAACjB,EAAA,EAAD,CAAKoC,OAAQ,CAAEiB,MAAO,SAAUhC,IAAI,UAClC,kBAACiC,EAAA,EAAD,CAAM5B,MAAOhB,EAAM6C,WAAY5B,KAAK,WAErCjB,EAAMC,YAOV,SAAS6C,EAAc9C,GAC5B,OACE,kBAACV,EAAA,EAAD,CAAKqB,IAAI,QAAQJ,UAAU,SAASc,IAAI,UACrCrB,EAAMC,U,YCnBN,SAAS8C,EAAoB/C,GAClC,OACE,kBAACV,EAAA,EAAD,CAAK0D,KAAK,OAAOtD,WAAYM,EAAMiD,aACjC,kBAAC3D,EAAA,EAAD,CACEI,WAAYM,EAAMN,WAClBa,UAAWP,EAAMO,UACjByC,KAAMhD,EAAMgD,KACZtC,KAAMV,EAAMU,MAEZ,kBAACwC,EAAD,CACEvC,IAAKX,EAAMmD,OACXC,QAAQ,EACRZ,MAAOxC,EAAMwC,MACba,SAAUrD,EAAMqD,SAChBrC,MAAOhB,EAAMsD,gBAGjB,kBAACJ,EAAD,CACEvC,IAAKX,EAAMuD,UACXN,YAAajD,EAAMiD,YACnBjC,MAAOhB,EAAMwD,iBAEZxD,EAAMC,WAMf,SAASiD,EAA6BlD,GACpC,OAAIA,EAAMoD,OAEN,kBAAC9D,EAAA,EAAD,CAAKqB,IAAKX,EAAMW,KACd,kBAACrB,EAAA,EAAD,CAAKoB,MAAI,EAACF,MAAM,SAASd,WAAYM,EAAMqD,SAAUxB,OAAO,WAC1D,kBAAC,IAAD,CACErB,MAAM,SACNG,IAAI,QACJqC,KAAK,WACLpB,MAAM,SACN6B,UAAU,OACVC,MAAO,CAAEzC,KAAM,QAAS0C,OAAQ,OAChCjE,WAAYM,EAAMgB,OAEjBhB,EAAMwC,SAQf,kBAAClD,EAAA,EAAD,CAAKqB,IAAKX,EAAMW,KACd,kBAACrB,EAAA,EAAD,CAAKoB,MAAI,EAACF,MAAM,SAASd,WAAYM,EAAMiD,YAAapB,OAAO,WAC7D,kBAAC,IAAD,CACErB,MAAM,SACNG,IAAI,QACJqC,KAAK,WACLpB,MAAM,SACN6B,UAAU,OACVC,MAAO,CAAEzC,KAAM,QAAS0C,OAAQ,UAChCjE,WAAYM,EAAMgB,OAEjBhB,EAAMC,YC1DjB,IAAM2D,EACJ,kBAACtE,EAAA,EAAD,CAAKgC,UAAU,gBACb,kBAACuC,EAAA,EAAD,CAAM7C,MAAM,QAAQC,KAAK,UACzB,kBAACO,EAAA,EAAD,CAAMR,MAAM,SAASsB,OAAO,OAAOrB,KAAK,SAAxC,SAME6C,EACJ,kBAACxE,EAAA,EAAD,CAAKgC,UAAU,gBACb,kBAACyC,EAAA,EAAD,CAAS/C,MAAM,QAAQC,KAAK,UAC5B,kBAACO,EAAA,EAAD,CAAMR,MAAM,SAASsB,OAAO,OAAOrB,KAAK,SAAxC,UAME+C,EACJ,kBAAC1E,EAAA,EAAD,CAAKkB,MAAM,SAASc,UAAU,gBAC5B,kBAAC2C,EAAA,EAAD,CAAQjD,MAAM,QAAQC,KAAK,UAC3B,kBAACO,EAAA,EAAD,CAAMR,MAAM,SAASsB,OAAO,OAAOrB,KAAK,SAAxC,aAyGWiD,E,uKAjGX,OACE,kBAAC5E,EAAA,EAAD,CACEoB,KAAK,QACLD,QAAQ,SACRD,MAAM,SACND,UAAU,kBAEV,kBAACwC,EAAD,CACErD,WAAW,QACX8C,MAAOoB,EACPO,UAAU,YACVhB,OAAQ,CAAEvC,IAAK,SAAUE,WAAY,SACrCyC,UAAW,CAAE1C,OAAQ,QAASC,WAAY,SAC1CwC,aAAa,UACbE,gBAAgB,WAEhB,kBAACV,EAAD,KACE,kBAACJ,EAAD,CAAUG,WAAW,SAArB,0CAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,0BACA,kBAACH,EAAD,CAAUG,WAAW,SAArB,4BACA,kBAACH,EAAD,CAAUG,WAAW,SAArB,mDAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,qDAGA,kBAACH,EAAD,CAAUG,WAAW,SACnB,kBAACjD,EAAA,EAAD,CACE8B,OAAQ,CAAEiB,MAAO,UACjB9C,KAAK,UACLuB,MAAM,qBAJV,4BAUJ,kBAAC2B,EAAD,CACErD,WAAW,QACX8C,MAAOsB,EACPK,UAAU,YACVhB,OAAQ,CAAEvC,IAAK,SAAUE,WAAY,SACrCyC,UAAW,CAAE1C,OAAQ,QAASC,WAAY,SAC1CwC,aAAa,UACbE,gBAAgB,WAEhB,kBAACV,EAAD,KACE,kBAACJ,EAAD,CAAUG,WAAW,SAArB,kDAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,oCAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,sCAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,mDAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,8BACA,kBAACH,EAAD,CAAUG,WAAW,SAArB,iCAGJ,kBAACE,EAAD,CACErD,WAAW,QACX8C,MAAOwB,EACPG,UAAU,YACVhB,OAAQ,CAAEvC,IAAK,SAAUE,WAAY,SACrCyC,UAAW,CAAE1C,OAAQ,QAASC,WAAY,SAC1CwC,aAAa,UACbE,gBAAgB,WAEhB,kBAACV,EAAD,KACE,kBAACJ,EAAD,CAAUG,WAAW,SAArB,uDAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,qDAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,+BACA,kBAACH,EAAD,CAAUG,WAAW,SAArB,sCAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,wCAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,yC,GAzFS3C,IAAMC,W,gNC5B3B,IAAMiE,EAAY/D,kBAAOmB,IAAPnB,CAAH,KAITgE,EAAehE,kBAAOmB,IAAPnB,CAAH,KAIX,SAASiE,EAActE,GAC5B,OACE,kBAACV,EAAA,EAAD,CAAKiB,UAAU,kBACb,kBAACjB,EAAA,EAAD,CACEiB,UAAU,MACVc,IAAI,QACJb,MAAM,SACNC,QAAQ,SACRE,IAAI,QACJI,OAAQ,CAAEE,KAAM,SAAUC,KAAM,QAASF,MAAO,WAChDY,MAAM,UAEN,kBAACJ,EAAA,EAAD,CAAMc,OAAO,OAAOtB,MAAOhB,EAAMuE,eAC9BvE,EAAMwE,MAET,kBAACC,EAAA,EAAD,CAAWxD,KAAK,QAAQD,MAAOhB,EAAM6C,cAEvC,kBAACvD,EAAA,EAAD,CACEoC,OAAQ,CAAEd,IAAK,QAAS8D,KAAM,UAC9B3D,OAAQ,CAAEG,KAAM,SAAUD,KAAM,SAAUD,MAAO,WACjDL,IAAI,QACJqC,MAAI,GAEJ,kBAACoB,EAAD,CAAWpD,MAAOhB,EAAMuC,eAAgBtB,KAAK,SAC1CjB,EAAMwC,OAET,kBAAC6B,EAAD,CACErD,MAAOhB,EAAM2E,kBACbjD,OAAQ,CAAEb,OAAQ,SAClBI,KAAK,UAEJjB,EAAM4E,UAER5E,EAAMC,SACP,kBAAC4E,EAAD,CAAiBC,aAAc9E,EAAM8E,aAAcC,WAAY/E,EAAM+E,eAMtE,SAASF,EAAgB7E,GAC9B,IACIgF,EADEC,EAAQjF,EAAM8E,aAGpB,OAAa,MAATG,GACFD,EAAYC,EAAMC,KAAI,SAACC,GAAD,OAAO,kBAACC,EAAD,CAAgBL,WAAY/E,EAAM+E,YAAaI,MAE1E,kBAAC7F,EAAA,EAAD,CAAKoC,OAAQ,CAAEd,IAAK,QAASC,OAAQ,UACnC,kBAACwD,EAAD,CAAcrB,KAAK,aAAa/B,KAAK,SAArC,UAGA,kBAAC3B,EAAA,EAAD,CAAKoC,OAAQ,CAAEd,IAAK,UAAYL,UAAU,iBAAiBc,IAAI,UAC5D2D,KAMF,KAGT,SAASI,EAAepF,GACtB,OACE,kBAACqF,EAAA,EAAD,CAAM3F,WAAYM,EAAM+E,WAAYpE,IAAI,SAAS8C,UAAU,UACxDzD,EAAMC,U,ICmCEqF,E,uKAxGX,OACE,kBAACpD,EAAD,CACEM,MAAM,kBACND,eAAe,YACfJ,WAAW,QACXC,WAAW,QAEX,kBAACkC,EAAD,CACEE,KAAK,UACLhC,MAAM,4BACNoC,SAAS,uBACTE,aAAc,CAAC,OAAQ,QAAS,OAAQ,wBACxCP,cAAc,aACdhC,eAAe,YACfoC,kBAAkB,aAClB9B,WAAW,QACXkC,WAAW,SAEX,kBAACzF,EAAA,EAAD,CAAKiB,UAAU,iBAAiBc,IAAI,SAClC,kBAACG,EAAA,EAAD,0NAKE,kBAAC5B,EAAA,EAAD,CAAQC,KAAK,WAAWuB,MAAM,oBAIpC,kBAACkD,EAAD,CACEE,KAAK,yBACLhC,MAAM,sBACNoC,SAAS,mBACTE,aAAc,CACZ,gBACA,WACA,OACA,SACA,OACA,QAEFP,cAAc,aACdhC,eAAe,YACfoC,kBAAkB,aAClB9B,WAAW,QACXkC,WAAW,SAEX,kBAACrC,EAAD,CAAUG,WAAW,SAArB,oGAIA,kBAACH,EAAD,CAAUG,WAAW,SAArB,2GAIA,kBAACH,EAAD,CAAUG,WAAW,SAArB,qEAGA,kBAACH,EAAD,CAAUG,WAAW,SAArB,8GAIA,kBAACH,EAAD,CAAUG,WAAW,SAArB,4DAIF,kBAACyB,EAAD,CACEE,KAAK,4BACLhC,MAAM,YACNoC,SAAS,aACTE,aAAc,CACZ,OACA,SACA,WACA,QACA,UACA,OACA,MACA,gBACA,mBAEFP,cAAc,aACdhC,eAAe,YACfoC,kBAAkB,aAClB9B,WAAW,QACXkC,WAAW,SAEX,kBAACrC,EAAD,CAAUG,WAAW,SAArB,sFAIA,kBAACH,EAAD,CAAUG,WAAW,SAArB,qFAIA,kBAACH,EAAD,CAAUG,WAAW,SAArB,yH,GAhGS3C,IAAMC,W,qCC8JVoF,G,uKAzJX,OACE,kBAACrD,EAAD,CACExC,WAAW,QACX8C,MAAM,oBACNL,WAAW,YACXC,WAAW,YAEX,kBAACkC,EAAD,CACEE,KAAK,wBACLhC,MAAM,oBACNoC,SAAS,8BACTE,aAAc,CAAC,QAAS,UAAW,gBACnCC,WAAW,SAEX,kBAACzF,EAAA,EAAD,CAAKiB,UAAU,kBACb,kBAACjB,EAAA,EAAD,CAAK+B,IAAI,QAAQK,OAAQ,CAAEb,OAAQ,WACjC,kBAACW,EAAA,EAAD,CAAME,OAAQ,CAAEb,OAAQ,UAAxB,kTAOA,kBAAC6B,EAAD,oJAKA,kBAACA,EAAD,wGAIA,kBAACA,EAAD,oHAKF,kBAACpD,EAAA,EAAD,CACEkB,MAAM,SACNwC,KAAK,aACLtB,OAAO,QACPE,MAAM,QACNC,OAAO,SAEP,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAUC,IAAKwD,MAC1B,kBAAChE,EAAA,EAAD,CAAMP,KAAK,SAAX,+BAIN,kBAACrB,EAAA,EAAD,CAAQC,KAAK,UAAUC,KAAK,WAC5B,kBAACwE,EAAD,CACEE,KAAK,6BACLhC,MAAM,mBACNoC,SAAS,sBACTE,aAAc,CAAC,OAAQ,SAAU,aAAc,eAC/CC,WAAW,SAEX,kBAACzF,EAAA,EAAD,CAAKiB,UAAU,kBACb,kBAACjB,EAAA,EAAD,CAAK+B,IAAI,QAAQK,OAAQ,CAAEb,OAAQ,WACjC,kBAACW,EAAA,EAAD,CAAME,OAAQ,CAAEb,OAAQ,WAAxB,0TAOA,kBAAC6B,EAAD,gFAIA,kBAACA,EAAD,+EAGA,kBAACA,EAAD,gIAIA,kBAACA,EAAD,uIAKF,kBAACpD,EAAA,EAAD,CACE+B,IAAI,QACJb,MAAM,SACNwC,KAAK,aACLtB,OAAO,QACPE,MAAM,SACNC,OAAO,SAEP,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAUC,IAAKyD,OAC1B,kBAACjE,EAAA,EAAD,CAAMP,KAAK,SAAX,wDAMN,kBAACqD,EAAD,CACEE,KAAK,OACLhC,MAAM,eACNoC,SAAS,uBAET,kBAACtF,EAAA,EAAD,CAAKiB,UAAU,kBACb,kBAACjB,EAAA,EAAD,CAAK+B,IAAI,SACP,kBAACG,EAAA,EAAD,CAAME,OAAQ,CAAEb,OAAQ,WAAxB,gOAMA,kBAAC6B,EAAD,+GAIA,kBAACA,EAAD,uHAIA,kBAACA,EAAD,gFAIA,kBAACpD,EAAA,EAAD,CAAKoC,OAAQ,CAAEd,IAAK,WAClB,kBAACiE,EAAD,CACEC,aAAc,CACZ,OACA,cACA,cACA,SACA,SAEFC,WAAW,YAIjB,kBAACzF,EAAA,EAAD,CACE+B,IAAI,QACJb,MAAM,SACNkB,OAAO,QACPsB,KAAK,aACLpB,MAAM,QACNC,OAAO,UAEP,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAUC,IAAK0D,MAC1B,kBAAClE,EAAA,EAAD,CAAMP,KAAK,SAAX,2C,GAlJMf,IAAMC,W,oCCH1B,IAAMwF,GACJ,kBAACrG,EAAA,EAAD,CAAKkB,MAAM,SAASc,UAAU,gBAC5B,kBAACE,EAAA,EAAD,CAAMR,MAAM,SAASC,KAAK,UAA1B,YAoEJ,SAAS2E,GAAK5F,GACZ,OC3EK,SAAyBA,GAAQ,IAAD,EACH6F,oBAAS,GADN,oBAC9BC,EAD8B,KAClBC,EADkB,KAE/BC,EAAUhG,EAAMiG,QAEtB,OACE,kBAACD,EAAD,CACE1E,UAAWtB,EAAMsB,UACjBN,MAAO8E,EAAa9F,EAAMkG,WAAalG,EAAMmG,aAC7ClF,KAAMjB,EAAMiB,KACZmF,aAAc,kBAAML,GAAY,IAChCM,aAAc,kBAAMN,GAAY,MDiE7BO,CAAgBtG,GAIVuG,O,uKAjEX,OACE,kBAACjH,EAAA,EAAD,CAAKoB,KAAK,SACR,kBAACqC,EAAD,CACEP,MAAOmD,GACPxC,OAAQ,CAAErC,WAAY,SACtByC,UAAW,CAAEzC,WAAY,SACzBpB,WAAW,QACXuD,YAAY,YACZI,SAAS,QACTC,aAAa,UACbE,gBAAgB,WAEhB,kBAAC5D,EAAA,EAAD,CAAQC,KAAK,WAAWC,KAAK,YAC7B,kBAACR,EAAA,EAAD,CAAKqB,IAAI,QAAQH,MAAM,SAASa,IAAI,SAClC,kBAACG,EAAA,EAAD,oGAIA,kBAAClC,EAAA,EAAD,CAAKiB,UAAU,MAAMc,IAAI,SACvB,kBAACzB,EAAA,EAAD,CAAQC,KAAK,qDACX,kBAACP,EAAA,EAAD,KACE,kBAACsG,GAAD,CACEtE,UAAU,cACV2E,QAASO,KACTL,aAAa,QACbD,WAAW,QACXjF,KAAK,aAIX,kBAACrB,EAAA,EAAD,CAAQC,KAAK,6BACX,kBAACP,EAAA,EAAD,KACE,kBAACsG,GAAD,CACEtE,UAAU,cACV2E,QAASQ,KACTN,aAAa,QACbD,WAAW,QACXjF,KAAK,aAIX,kBAACrB,EAAA,EAAD,CAAQC,KAAK,kCACX,kBAACP,EAAA,EAAD,KACE,kBAACsG,GAAD,CACEtE,UAAU,cACV2E,QAASS,KACTP,aAAa,QACbD,WAAW,QACXjF,KAAK,qB,GAlDHf,IAAMC,W,SEuBbwG,O,uKA/BX,OACE,kBAACrH,EAAA,EAAD,CAAKqB,IAAI,QAAQjB,WAAW,YAAYmC,OAAO,UAAUnB,KAAK,SAC5D,kBAACpB,EAAA,EAAD,CAAKmB,QAAQ,UAAUF,UAAU,kBAC/B,kBAACiB,EAAA,EAAD,CAAMP,KAAK,SAAX,mBAyBD,IAAI2F,MAAOC,cAzBV,gBAEA,kBAACrF,EAAA,EAAD,CAAMP,KAAK,SAAX,8BAC4B,IACxB,kBAACrB,EAAA,EAAD,CACE8B,OAAQ,CAAEiB,MAAO,UACjBhC,IAAK,CAAEgC,MAAO,SACd9C,KAAK,+CACLuB,MAAM,MACN0F,OAAO,SAEX,kBAAClH,EAAA,EAAD,CAAQC,KAAK,wBACX,kBAACkE,EAAA,EAAD,CAAS9C,KAAK,QAAQD,MAAM,UAAW,KAEzC,kBAACpB,EAAA,EAAD,CAAQC,KAAK,0BACX,kBAAC,KAAD,CAASoB,KAAK,QAAQD,MAAM,WACpB,W,GArBDd,IAAMC,WCQrB4G,GAAQ,CACZC,OAAQ,CACNC,OAAQ,CACNC,UAAW,UACXC,WAAY,UACZC,MAAO,WAETC,KAAM,CACJC,OAAQ,WACRrG,KAAM,OACNY,OAAQ,SAGZ0F,OAAQ,CACNH,MAAO,CACLI,eAAgB,OAChBC,OAAQ,CACNzG,MAAO,UACP0G,WAAY,OACZC,QAAS,MACT,mBAAoB,UACpB,gBAAiB,QAGrBF,OAAQ,CACNC,WAAY,SAGhBE,IAAK,CACHH,OAAQ,4BAEVI,KAAM,CACJC,OAAQ,CACN7G,KAAM,MACNY,OAAQ,OAEVkG,QAAS,CACP9G,KAAM,MACNY,OAAQ,YAwBCmG,OAnBf,WACE,OACE,kBAACC,EAAA,EAAD,CAASlB,MAAOA,GAAOmB,KAAK,QAC1B,kBAAC5I,EAAA,EAAD,CAAK0D,KAAK,QACR,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACmF,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,UCvDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a0801885.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FlatCharacterAvatarWeb.87a8af0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sw-image.49b94756.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rspeer-img.e590aeb1.png\";","import React from \"react\";\nimport { Anchor, Box } from \"grommet\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <Box\n        animation={{ type: \"fadeIn\", duration: \"2000\" }}\n        background=\"light-1\"\n        overflow=\"auto\"\n      >\n        <Anchor href=\"#Home\" name=\"Home\"></Anchor>\n        {this.props.children}\n      </Box>\n      \n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport { Anchor, Box } from \"grommet\";\nimport styled from \"styled-components\";\n\nconst StyledAnchor = styled(Anchor)`\n  font-family: Sansita Swashed;\n`;\n\nclass SiteHeader extends React.Component {\n  render() {\n    return (\n      <Box\n        direction=\"row\"\n        align=\"center\"\n        justify=\"between\"\n        flex=\"false\"\n        pad={{ top: \"large\", bottom: \"xsmall\", horizontal: \"xlarge\" }}\n        border={{ color: \"light-3\", size: \"xsmall\", side: \"bottom\" }}\n      >\n        <Box animation={{ type: \"fadeIn\", delay: \"250\", duration: \"2000\" }}>\n          <StyledAnchor href=\"/\" size=\"xlarge\" label=\"SP\" />\n        </Box>\n        <Box direction=\"row-responsive\" gap=\"medium\">\n          <Anchor className=\"jello-horizontal\" href=\"#Home\" label=\"Home\" />\n          <Anchor className=\"jello-horizontal\" href=\"#Skills\" label=\"Skills\" />\n          <Anchor className=\"jello-horizontal\" href=\"#Work\" label=\"Work\" />\n          <Anchor className=\"jello-horizontal\" href=\"#Projects\" label=\"Projects\" />\n          <Anchor className=\"jello-horizontal\" href=\"#Contact\" label=\"Contact\" />\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default SiteHeader;\n","import React from \"react\";\nimport { Box, Text, Image } from \"grommet\";\nimport styled from \"styled-components\";\nimport \"../styles/animista.css\";\nimport AvatarImg from \"../res/FlatCharacterAvatarWeb.svg\";\n\nconst StyledText = styled(Text)`\n  font-family: Bebas Neue;\n`;\n\nclass TitleCard extends React.Component {\n  render() {\n    return (\n      <Box\n        direction=\"row\"\n        justify=\"center\"\n        align=\"center\"\n        flex=\"false\"\n        background=\"#FFFFFF\"\n      >\n        <Box pad=\"small\" align=\"center\" width=\"100%\">\n          <Box height=\"small\" width=\"small\">\n            <Image\n              className=\"slide-in-blurred-top\"\n              fit=\"cover\"\n              src={AvatarImg}\n            />\n          </Box>\n          <Box direction=\"row-responsive\" align=\"center\" justify=\"center\">\n            <HeaderText className=\"slide-in-blurred-left\">\n              Full Stack Developer,\n            </HeaderText>\n            <HeaderText className=\"puff-in-center\">Hobbyist</HeaderText>\n            <HeaderText className=\"slide-in-blurred-right\">\n              & Huge Nerd\n            </HeaderText>\n          </Box>\n          <Text margin=\"small\" color=\"accentText\">\n            I write concise, clean code for work and in my spare time and love\n            every minute of it.\n          </Text>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nfunction HeaderText(props) {\n  return (\n    <StyledText\n      className={props.className}\n      pad=\"small\"\n      size=\"xxlarge\"\n      margin=\"small\"\n      color=\"titleText\"\n    >\n      {props.children}\n    </StyledText>\n  );\n}\n\nexport default TitleCard;\n","import React from \"react\";\nimport { Anchor, Box, Text } from \"grommet\";\n\nexport function BodyItem(props) {\n  return (\n    <Box flex=\"false\" background={props.background} direction={props.direction}>\n      <Anchor href={props.anchorHref} name={props.anchorName}></Anchor>\n      <Box\n        align=\"center\"\n        justify=\"center\"\n        margin={{ horizontal: \"xlarge\", vertical: \"xsmall\" }}\n        pad={{ horizontal: \"xlarge\", vertical: \"small\" }}\n      >\n        \n        <Box\n          align=\"center\"\n          justify=\"center\"\n          pad={{ top: \"large\", horizontal: \"xlarge\", bottom: \"medium\" }}\n        >\n          <Text weight=\"bold\" color={props.titleTextColor} size=\"xlarge\">\n            {props.title}\n          </Text>\n        </Box>\n      </Box>\n      <Box\n        margin={{ horizontal: \"large\", vertical: \"xsmall\" }}\n        pad={{ horizontal: \"large\", vertical: \"small\" }}\n      >\n        {props.children}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"grommet\";\nimport { BodyItem } from \"./BodyItem\";\n\nclass Introduction extends React.Component {\n  render() {\n    return (\n      <BodyItem\n        background=\"brand\"\n        title=\"Hello, I'm Shan.\"\n        anchorHref=\"#Skills\"\n        anchorName=\"Skills\"\n      >\n        <Text color=\"white\" size=\"medium\">\n          I am a full stack developer and I enjoy coding in my spare time, among\n          many other things. I created this website to demonstrate my web design\n          skills and learn React through practical application. This is my first\n          project and website created using React. Feel free to reach out to me if you are\n          interested in putting my skills to use, or if you want to talk about\n          computers, cars, travelling, small form factor PCs, DIY engineering,\n          woodworking, painting, video games or UX design.\n        </Text>\n      </BodyItem>\n    );\n  }\n}\n\nexport default Introduction;\n","import React from \"react\";\nimport { Box, Text } from \"grommet\";\nimport { Next } from \"grommet-icons\";\n\nexport function ListItem(props) {\n  return (\n    <Box flex=\"false\" direction=\"row-responsive\" align=\"center\" overflow=\"auto\">\n      <Text size=\"medium\" pad=\"small\">\n        <Box direction=\"row\">\n          <Box margin={{ right: \"small\"}} pad=\"xsmall\">\n            <Next color={props.imageColor} size=\"small\" />\n          </Box>\n          {props.children}\n        </Box>\n      </Text>\n    </Box>\n  );\n}\n\nexport function ListContainer(props) {\n  return (\n    <Box pad=\"small\" direction=\"column\" gap=\"xsmall\">\n      {props.children}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Card as GrommetCard } from \"grommet\";\n\nexport function SplitBackgroundCard(props) {\n  return (\n    <Box fill=\"true\" background={props.bottomColor}>\n      <Box\n        background={props.background}\n        direction={props.direction}\n        fill={props.fill}\n        flex={props.flex}\n      >\n        <SplitBackgroundCardComponent\n          pad={props.topPad}\n          header={true}\n          title={props.title}\n          topColor={props.topColor}\n          color={props.cardTopColor}\n        ></SplitBackgroundCardComponent>\n      </Box>\n      <SplitBackgroundCardComponent\n        pad={props.bottomPad}\n        bottomColor={props.bottomColor}\n        color={props.cardBottomColor}\n      >\n        {props.children}\n      </SplitBackgroundCardComponent>\n    </Box>\n  );\n}\n\nfunction SplitBackgroundCardComponent(props) {\n  if (props.header) {\n    return (\n      <Box pad={props.pad}>\n        <Box flex align=\"center\" background={props.topColor} height=\"xxsmall\">\n          <GrommetCard\n            align=\"center\"\n            pad=\"small\"\n            fill=\"vertical\"\n            width=\"medium\"\n            elevation=\"none\"\n            round={{ size: \"small\", corner: \"top\" }}\n            background={props.color}\n          >\n            {props.title}\n          </GrommetCard>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box pad={props.pad}>\n      <Box flex align=\"center\" background={props.bottomColor} height=\"xxsmall\">\n        <GrommetCard\n          align=\"center\"\n          pad=\"small\"\n          fill=\"vertical\"\n          width=\"medium\"\n          elevation=\"none\"\n          round={{ size: \"small\", corner: \"bottom\" }}\n          background={props.color}\n        >\n          {props.children}\n        </GrommetCard>\n      </Box>\n    </Box>\n  );\n}\n\nexport function CardHeader(props) {\n  return (\n    <GrommetCard\n      align=\"center\"\n      justify=\"center\"\n      gap=\"small\"\n      elevation=\"none\"\n      pad=\"medium\"\n      background=\"light-2\"\n      width=\"medium\"\n      round={{ size: \"small\", corner: \"top\" }}\n    >\n      {props.children}\n    </GrommetCard>\n  );\n}\n\nexport function Card(props) {\n  return (\n    <Box\n      border={{ color: \"light-4\", size: \"xsmall\", side: \"bottom\" }}\n      round={{ size: \"small\", corner: \"bottom\" }}\n    >\n      <GrommetCard\n        align=\"center\"\n        justify=\"center\"\n        gap=\"small\"\n        elevation=\"none\"\n        pad=\"small\"\n        background=\"light-2\"\n        width=\"medium\"\n        round={{ size: \"small\", corner: \"bottom\" }}\n        border={{ color: \"light-4\", size: \"xsmall\", side: \"vertical\" }}\n      >\n        {props.children}\n      </GrommetCard>\n    </Box>\n  );\n}\n\nexport function CardContainer(props) {\n  return (\n    <Box direction=\"row-responsive\" justify=\"between\" gap=\"large\">\n      {props.children}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Anchor, Box, Text } from \"grommet\";\nimport { Code, Deploy, Reactjs } from \"grommet-icons\";\nimport { ListContainer, ListItem } from \"./Lists\";\nimport { SplitBackgroundCard } from \"./Card\";\n\nconst JavaTitle = (\n  <Box className=\"shake-bottom\">\n    <Code color=\"brand\" size=\"large\" />\n    <Text color=\"dark-2\" weight=\"bold\" size=\"large\">\n      Java\n    </Text>\n  </Box>\n);\n\nconst ReactTitle = (\n  <Box className=\"shake-bottom\">\n    <Reactjs color=\"brand\" size=\"large\" />\n    <Text color=\"dark-2\" weight=\"bold\" size=\"large\">\n      React\n    </Text>\n  </Box>\n);\n\nconst ProjectsTitle = (\n  <Box align=\"center\" className=\"shake-bottom\">\n    <Deploy color=\"brand\" size=\"large\" />\n    <Text color=\"dark-2\" weight=\"bold\" size=\"large\">\n      Projects\n    </Text>\n  </Box>\n);\n\nclass Skills extends React.Component {\n  render() {\n    return (\n      <Box\n        flex=\"false\"\n        justify=\"center\"\n        align=\"center\"\n        direction=\"row-responsive\"\n      >\n        <SplitBackgroundCard\n          background=\"brand\"\n          title={JavaTitle}\n          textColor=\"titleText\"\n          topPad={{ top: \"medium\", horizontal: \"large\" }}\n          bottomPad={{ bottom: \"large\", horizontal: \"large\"  }}\n          cardTopColor=\"light-2\"\n          cardBottomColor=\"light-2\"\n        >\n          <ListContainer>\n            <ListItem imageColor=\"brand\">\n              6 Java programs released to the public\n            </ListItem>\n            <ListItem imageColor=\"brand\">6000+ registered users</ListItem>\n            <ListItem imageColor=\"brand\">1500+ daily active users</ListItem>\n            <ListItem imageColor=\"brand\">\n              15,000+ lines of code submitted for peer review\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              150,000+ lines of code developed for personal use\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              <Anchor\n                margin={{ right: \"xsmall\" }}\n                href=\"#RSPeer\"\n                label=\"More information\"\n              />\n              available in Projects.\n            </ListItem>\n          </ListContainer>\n        </SplitBackgroundCard>\n        <SplitBackgroundCard\n          background=\"brand\"\n          title={ReactTitle}\n          textColor=\"titleText\"\n          topPad={{ top: \"medium\", horizontal: \"large\" }}\n          bottomPad={{ bottom: \"large\", horizontal: \"large\"  }}\n          cardTopColor=\"light-2\"\n          cardBottomColor=\"light-2\"\n        >\n          <ListContainer>\n            <ListItem imageColor=\"brand\">\n              Created this website as my first React project\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              Makes use of new React Hooks API\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              Uses CSS component library Grommet\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              Reusable components created with DRY principles\n            </ListItem>\n            <ListItem imageColor=\"brand\">Employs OOP best practices</ListItem>\n            <ListItem imageColor=\"brand\">Design and UX created by me</ListItem>\n          </ListContainer>\n        </SplitBackgroundCard>\n        <SplitBackgroundCard\n          background=\"brand\"\n          title={ProjectsTitle}\n          textColor=\"titleText\"\n          topPad={{ top: \"medium\", horizontal: \"large\" }}\n          bottomPad={{ bottom: \"large\", horizontal: \"large\"  }}\n          cardTopColor=\"light-2\"\n          cardBottomColor=\"light-2\"\n        >\n          <ListContainer>\n            <ListItem imageColor=\"brand\">\n              Android application for dine-in restaurant ordering\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              Automation scripts for MMORPG Oldschool Runescape\n            </ListItem>\n            <ListItem imageColor=\"brand\">Website created using React</ListItem>\n            <ListItem imageColor=\"brand\">\n              Self taught Java, React and NodeJS\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              Venturing into Raspberry Pi projects\n            </ListItem>\n            <ListItem imageColor=\"brand\">\n              Exploring hardware engineering\n            </ListItem>\n          </ListContainer>\n        </SplitBackgroundCard>\n      </Box>\n    );\n  }\n}\n\nexport default Skills;\n","import React from \"react\";\nimport { Box, Card, Text } from \"grommet\";\nimport { CaretNext } from \"grommet-icons\";\nimport styled from \"styled-components\";\n\nconst TitleText = styled(Text)`\n  font-family: Bebas Neue;\n`;\n\nconst PositionText = styled(Text)`\n  text-transform: uppercase;\n`;\n\nexport function TimelineEntry(props) {\n  return (\n    <Box direction=\"row-responsive\">\n      <Box\n        direction=\"row\"\n        gap=\"small\"\n        align=\"center\"\n        justify=\"center\"\n        pad=\"small\"\n        border={{ size: \"xsmall\", side: \"right\", color: \"light-6\" }}\n        width=\"medium\"\n      >\n        <Text weight=\"bold\" color={props.dateTextColor}>\n          {props.date}\n        </Text>\n        <CaretNext size=\"small\" color={props.imageColor} />\n      </Box>\n      <Box\n        margin={{ top: \"small\", left: \"medium\" }}\n        border={{ side: \"bottom\", size: \"xsmall\", color: \"light-6\" }}\n        pad=\"small\"\n        fill\n      >\n        <TitleText color={props.titleTextColor} size=\"large\">\n          {props.title}\n        </TitleText>\n        <PositionText\n          color={props.positionTextColor}\n          margin={{ bottom: \"small\" }}\n          size=\"medium\"\n        >\n          {props.position}\n        </PositionText>\n        {props.children}\n        <TechnologyEntry technologies={props.technologies} stackColor={props.stackColor}/>\n      </Box>\n    </Box>\n  );\n}\n\nexport function TechnologyEntry(props) {\n  const stack = props.technologies;\n  let techStack;\n\n  if (stack != null) {\n    techStack = stack.map((i) => <TechnologyCard stackColor={props.stackColor}>{i}</TechnologyCard>);\n    return (\n      <Box margin={{ top: \"small\", bottom: \"small\" }}>\n        <PositionText fill=\"horizontal\" size=\"small\">\n          Stack:\n        </PositionText>\n        <Box margin={{ top: \"xsmall\" }} direction=\"row-responsive\" gap=\"xsmall\">\n          {techStack}\n        </Box>\n      </Box>\n    );\n  }\n\n  return null;\n}\n\nfunction TechnologyCard(props) {\n  return (\n    <Card background={props.stackColor} pad=\"xsmall\" elevation=\"xsmall\">\n      {props.children}\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Anchor, Box, Text } from \"grommet\";\nimport { TimelineEntry } from \"./TimelineEntry\";\nimport { ListItem } from \"./Lists\";\nimport { BodyItem } from \"./BodyItem\";\n\nclass Work extends React.Component {\n  render() {\n    return (\n      <BodyItem\n        title=\"Work Experience\"\n        titleTextColor=\"titleText\"\n        anchorHref=\"#Work\"\n        anchorName=\"Work\"\n      >\n        <TimelineEntry\n          date=\"Current\"\n          title=\"Open to new opportunities\"\n          position=\"Full Stack Developer\"\n          technologies={[\"Java\", \"React\", \"Node\", \"Practically Anything\"]}\n          dateTextColor=\"accentText\"\n          titleTextColor=\"titleText\"\n          positionTextColor=\"accentText\"\n          imageColor=\"brand\"\n          stackColor=\"brand\"\n        >\n          <Box direction=\"row-responsive\" gap=\"small\">\n            <Text>\n              Are you looking for a new member to join your team? If you're in\n              need of a hard working yet easy going full stack developer who can\n              learn new technologies with speedy efficiency and is very quick on\n              their feet:\n              <Anchor href=\"#Contact\" label=\" Contact Me.\" />\n            </Text>\n          </Box>\n        </TimelineEntry>\n        <TimelineEntry\n          date=\"June 2019 - April 2020\"\n          title=\"BMO Financial Group\"\n          position=\"Junior Developer\"\n          technologies={[\n            \"Elasticsearch\",\n            \"Filebeat\",\n            \"Java\",\n            \"Python\",\n            \"Ruby\",\n            \"YAML\",\n          ]}\n          dateTextColor=\"accentText\"\n          titleTextColor=\"titleText\"\n          positionTextColor=\"accentText\"\n          imageColor=\"brand\"\n          stackColor=\"brand\"\n        >\n          <ListItem imageColor=\"brand\">\n            Collaborated within a small team to maintain ELK (Elastic) platform\n            for entire BMO organization.\n          </ListItem>\n          <ListItem imageColor=\"brand\">\n            Connected with project teams to assess relevant platform use cases\n            and onboard projects on to platform.\n          </ListItem>\n          <ListItem imageColor=\"brand\">\n            Ensured platform and data ingestion pipeline long term stability.\n          </ListItem>\n          <ListItem imageColor=\"brand\">\n            Provide support for unexpected platform issues and minimize business\n            impact to customers and stakeholders.\n          </ListItem>\n          <ListItem imageColor=\"brand\">\n            Create scripts to automate tasks in onboarding process.\n          </ListItem>\n        </TimelineEntry>\n        <TimelineEntry\n          date=\"February 2019 - June 2020\"\n          title=\"FDM Group\"\n          position=\"Consultant\"\n          technologies={[\n            \"Java\",\n            \"Docker\",\n            \"Selenium\",\n            \"JUnit\",\n            \"Mockito\",\n            \"UNIX\",\n            \"SQL\",\n            \"Code Security\",\n            \"Design Patterns\",\n          ]}\n          dateTextColor=\"accentText\"\n          titleTextColor=\"titleText\"\n          positionTextColor=\"accentText\"\n          imageColor=\"brand\"\n          stackColor=\"brand\"\n        >\n          <ListItem imageColor=\"brand\">\n            Attended technical training courses in multiple fields involving\n            computer science.\n          </ListItem>\n          <ListItem imageColor=\"brand\">\n            Completed all training courses with distinction for numerous\n            platforms and skills\n          </ListItem>\n          <ListItem imageColor=\"brand\">\n            Mentored other trainees and offered assistance in learning new\n            skills and improving overall training experience\n          </ListItem>\n        </TimelineEntry>\n      </BodyItem>\n    );\n  }\n}\n\nexport default Work;\n","import React from \"react\";\nimport { Anchor, Box, Image, Text } from \"grommet\";\nimport { BodyItem } from \"./BodyItem\";\nimport { TechnologyEntry, TimelineEntry } from \"./TimelineEntry\";\nimport SW from \"../res/sw-image.jpg\";\nimport Avatar from \"../res/FlatCharacterAvatarWeb.svg\";\nimport RSPeer from \"../res/rspeer-img.png\";\nimport { ListItem } from \"./Lists\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <BodyItem\n        background=\"brand\"\n        title=\"Personal Projects\"\n        anchorHref=\"#Projects\"\n        anchorName=\"Projects\"\n      >\n        <TimelineEntry\n          date=\"August 2020 - Current\"\n          title=\"Portfolio Website\"\n          position=\"ReactJS Developer Portfolio\"\n          technologies={[\"React\", \"Grommet\", \"Github Pages\"]}\n          stackColor=\"white\"\n        >\n          <Box direction=\"row-responsive\">\n            <Box gap=\"small\" margin={{ bottom: \"medium\" }}>\n              <Text margin={{ bottom: \"small\" }}>\n                A website created by myself to act as a portfolio for my work\n                and personal projects. As well as demonstrate my web application\n                and design skills. This website was also used as a method of\n                learning and further improving my skills in React and Node, as\n                it is my first ever project using these frameworks.\n              </Text>\n              <ListItem>\n                Self-taught React, Node and Grommet by reading official\n                documentation and through practical application during the\n                creation of this website\n              </ListItem>\n              <ListItem>\n                All code follows the DRY principle as well as the best practices\n                of object oriented programming\n              </ListItem>\n              <ListItem>\n                Site design, layout, color scheme, and choice of typography\n                chosen and created solely by myself with care.\n              </ListItem>\n            </Box>\n            <Box\n              align=\"center\"\n              fill=\"horizontal\"\n              margin=\"small\"\n              width=\"small\"\n              height=\"small\"\n            >\n              <Image fit=\"contain\" src={Avatar} />\n              <Text size=\"small\">My Flat Character Avatar</Text>\n            </Box>\n          </Box>\n        </TimelineEntry>\n        <Anchor href=\"#RSPeer\" name=\"RSPeer\" />\n        <TimelineEntry\n          date=\"September 2018 - June 2020\"\n          title=\"RSPeer Scripting\"\n          position=\"Java Automation API\"\n          technologies={[\"Java\", \"Docker\", \"Networking\", \"Concurrency\"]}\n          stackColor=\"white\"\n        >\n          <Box direction=\"row-responsive\">\n            <Box gap=\"small\" margin={{ bottom: \"medium\" }}>\n              <Text margin={{ bottom: \"medium\" }}>\n                Created Java scripts for automating complex tasks in the online\n                game Oldschool Runescape using the RSPeer client and its Java\n                API. The scripts were designed to complete in-game actions and\n                perform more efficiently than a human player while evading the\n                game’s machine learning powered bot detection system.\n              </Text>\n              <ListItem>\n                Designed control logic based on in-game conditions and user\n                preferences\n              </ListItem>\n              <ListItem>\n                Scripts were subject to peer review and approval before public release\n              </ListItem>\n              <ListItem>\n                Created tutorials, mentored new users and provided assistance\n                with Java concepts to help them create their own scripts.\n              </ListItem>\n              <ListItem>\n                3 free scripts and 3 premium scripts available to the public\n                with over 6000 registered users and over 1500 daily active users\n              </ListItem>\n            </Box>\n            <Box\n              gap=\"small\"\n              align=\"center\"\n              fill=\"horizontal\"\n              margin=\"small\"\n              width=\"medium\"\n              height=\"small\"\n            >\n              <Image fit=\"contain\" src={RSPeer} />\n              <Text size=\"small\">\n                Snapshot used in my \"Interface Explorer\" Tutorial\n              </Text>\n            </Box>\n          </Box>\n        </TimelineEntry>\n        <TimelineEntry\n          date=\"2015\"\n          title=\"Smart Waiter\"\n          position=\"Android Application\"\n        >\n          <Box direction=\"row-responsive\">\n            <Box gap=\"small\">\n              <Text margin={{ bottom: \"medium\" }}>\n                An Android application designed and developed from scratch with\n                a team of two other developers over the course of 8 months.\n                Allows users to order, pay and tip wait staff at a dine-in\n                restaurant using their Android phone.\n              </Text>\n              <ListItem>\n                Download a restaurant’s menu to a user’s phone using QR codes\n                and a Couchbase NoSQL database\n              </ListItem>\n              <ListItem>\n                Implemented front-end and back-end services to allow orders to\n                be placed and paid for through the applications\n              </ListItem>\n              <ListItem>\n                Designed Couchbase NoSQL database to store restaurant info and\n                metadata\n              </ListItem>\n              <Box margin={{ top: \"medium\" }}>\n                <TechnologyEntry\n                  technologies={[\n                    \"Java\",\n                    \"Android SDK\",\n                    \"CouchbaseDB\",\n                    \"Stripe\",\n                    \"ZXing\",\n                  ]}\n                  stackColor=\"white\"\n                ></TechnologyEntry>\n              </Box>\n            </Box>\n            <Box\n              gap=\"small\"\n              align=\"center\"\n              margin=\"small\"\n              fill=\"horizontal\"\n              width=\"small\"\n              height=\"medium\"\n            >\n              <Image fit=\"contain\" src={SW} />\n              <Text size=\"small\">Demo of Application Main Screen</Text>\n            </Box>\n          </Box>\n        </TimelineEntry>\n      </BodyItem>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport { Anchor, Box, Text } from \"grommet\";\nimport { Github, Linkedin, Mail } from \"grommet-icons\";\nimport { SplitBackgroundCard } from \"./Card\";\nimport { useElementHover } from \"../functions/ElementHover\";\n\nconst ContactTitle = (\n  <Box align=\"center\" className=\"shake-bottom\">\n    <Text color=\"dark-2\" size=\"xlarge\">\n      Contact\n    </Text>\n  </Box>\n);\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <Box flex=\"false\">\n        <SplitBackgroundCard\n          title={ContactTitle}\n          topPad={{ horizontal: \"large\" }}\n          bottomPad={{ horizontal: \"large\" }}\n          background=\"brand\"\n          bottomColor=\"titleText\"\n          topColor=\"brand\"\n          cardTopColor=\"light-2\"\n          cardBottomColor=\"light-2\"\n        >\n          <Anchor href=\"#Contact\" name=\"Contact\" />\n          <Box pad=\"small\" align=\"center\" gap=\"small\">\n            <Text>\n              I am always open to new hiring opportunities and ideas for\n              cooperation. Let's get in touch!\n            </Text>\n            <Box direction=\"row\" gap=\"small\">\n              <Anchor href=\"https://www.linkedin.com/in/shan-perera-32ba2070/\">\n                <Box>\n                  <Icon\n                    className=\"pulsate-fwd\"\n                    element={Linkedin}\n                    elementColor=\"brand\"\n                    hoverColor=\"hover\"\n                    size=\"medium\"\n                  />\n                </Box>\n              </Anchor>\n              <Anchor href=\"mailto:shan.perera7@pm.me\">\n                <Box>\n                  <Icon\n                    className=\"pulsate-fwd\"\n                    element={Mail}\n                    elementColor=\"brand\"\n                    hoverColor=\"hover\"\n                    size=\"medium\"\n                  />\n                </Box>\n              </Anchor>\n              <Anchor href=\"https://github.com/shanperera/\">\n                <Box>\n                  <Icon\n                    className=\"pulsate-fwd\"\n                    element={Github}\n                    elementColor=\"brand\"\n                    hoverColor=\"hover\"\n                    size=\"medium\"\n                  />\n                </Box>\n              </Anchor>\n            </Box>\n          </Box>\n        </SplitBackgroundCard>\n      </Box>\n    );\n  }\n}\n\nfunction Icon(props) {\n  return useElementHover(props);\n}\n\n\nexport default Contact;\n","import React, { useState } from \"react\";\n\nexport function useElementHover(props) {\n  const [isHovering, setHovering] = useState(false);\n  const Element = props.element;\n\n  return (\n    <Element\n      className={props.className}\n      color={isHovering ? props.hoverColor : props.elementColor}\n      size={props.size}\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n    />\n  );\n}\n","import React from \"react\";\nimport { Anchor, Box, Text } from \"grommet\";\nimport { Grommet, Reactjs } from \"grommet-icons\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <Box pad=\"small\" background=\"titleText\" height=\"xxsmall\" flex=\"false\">\n        <Box justify=\"between\" direction=\"row-responsive\">\n          <Text size=\"small\">Copyright © {getCurrentYear()} Shan Perera</Text>\n          \n          <Text size=\"small\">\n          Design and Functionality by{\" \"}\n              <Anchor\n                margin={{ right: \"xsmall\" }}\n                pad={{ right: \"small\" }}\n                href=\"https://github.com/shanperera/portfolio-site\"\n                label=\"Me.\"\n                target=\"_new\"\n              />\n            <Anchor href=\"https://reactjs.org/\">\n              <Reactjs size=\"small\" color=\"plain\" />{\" \"}\n            </Anchor>\n            <Anchor href=\"https://v2.grommet.io/\">\n              <Grommet size=\"small\" color=\"plain\" />\n            </Anchor>{\" \"}\n          </Text>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nfunction getCurrentYear() {\n  return new Date().getFullYear();\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Box, Grommet } from \"grommet\";\nimport Main from \"./components/Main\";\nimport SiteHeader from \"./components/SiteHeader\";\nimport TitleCard from \"./components/TitleCard\";\nimport Introduction from \"./components/Introduction\";\nimport Skills from \"./components/Skills\";\nimport Work from \"./components/Work\";\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\nimport Footer from './components/Footer';\n\nconst theme = {\n  global: {\n    colors: {\n      titleText: \"#152238\",\n      accentText: \"#1c2e4a\",\n      hover: \"#6FFFB0\"\n    },\n    font: {\n      family: \"Rajdhani\",\n      size: \"18px\",\n      height: \"24px\",\n    }\n  },\n  anchor: {\n    hover: {\n      textDecoration: \"none\",\n      extend: {\n        color: \"#6FFFB0\",\n        transition: \"0.8s\",\n        padding: \"4px\",\n        \"background-color\": \"#7D4CDB\",\n        \"border-radius\": \"5px\"\n      },\n    },\n    extend: {\n      transition: \"0.8s\"\n    }\n  },\n  box: {\n    extend: \"scroll-behavior: smooth;\",\n  },\n  text: {\n    xlarge: {\n      size: \"2em\",\n      height: \"1em\",\n    },\n    xxlarge: {\n      size: \"3em\",\n      height: \"0.75em\",\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <Grommet theme={theme} full=\"true\">\n      <Box fill=\"true\">\n        <SiteHeader></SiteHeader>\n        <Main>\n          <TitleCard></TitleCard>\n          <Introduction></Introduction>\n          <Skills></Skills>\n          <Work></Work>\n          <Projects></Projects>\n          <Contact></Contact>\n          <Footer></Footer>\n        </Main>\n      </Box>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}